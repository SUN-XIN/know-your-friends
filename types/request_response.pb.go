// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types/request_response.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The reauest message
type SessionRequest struct {
	UserID1              string   `protobuf:"bytes,1,opt,name=userID1,proto3" json:"userID1,omitempty"`
	UserID2              string   `protobuf:"bytes,2,opt,name=userID2,proto3" json:"userID2,omitempty"`
	StartDate            int64    `protobuf:"varint,3,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate              int64    `protobuf:"varint,4,opt,name=endDate,proto3" json:"endDate,omitempty"`
	Latitude             float64  `protobuf:"fixed64,5,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float64  `protobuf:"fixed64,6,opt,name=longitude,proto3" json:"longitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionRequest) Reset()         { *m = SessionRequest{} }
func (m *SessionRequest) String() string { return proto.CompactTextString(m) }
func (*SessionRequest) ProtoMessage()    {}
func (*SessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_request_response_f5edeaa3b812e241, []int{0}
}
func (m *SessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionRequest.Unmarshal(m, b)
}
func (m *SessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionRequest.Marshal(b, m, deterministic)
}
func (dst *SessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionRequest.Merge(dst, src)
}
func (m *SessionRequest) XXX_Size() int {
	return xxx_messageInfo_SessionRequest.Size(m)
}
func (m *SessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SessionRequest proto.InternalMessageInfo

func (m *SessionRequest) GetUserID1() string {
	if m != nil {
		return m.UserID1
	}
	return ""
}

func (m *SessionRequest) GetUserID2() string {
	if m != nil {
		return m.UserID2
	}
	return ""
}

func (m *SessionRequest) GetStartDate() int64 {
	if m != nil {
		return m.StartDate
	}
	return 0
}

func (m *SessionRequest) GetEndDate() int64 {
	if m != nil {
		return m.EndDate
	}
	return 0
}

func (m *SessionRequest) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *SessionRequest) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

// The response message
type SessionReply struct {
	BestFriend           string   `protobuf:"bytes,1,opt,name=bestFriend,proto3" json:"bestFriend,omitempty"`
	Crush                []string `protobuf:"bytes,2,rep,name=crush,proto3" json:"crush,omitempty"`
	MostSeen             string   `protobuf:"bytes,3,opt,name=mostSeen,proto3" json:"mostSeen,omitempty"`
	MutualLove           string   `protobuf:"bytes,4,opt,name=mutualLove,proto3" json:"mutualLove,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionReply) Reset()         { *m = SessionReply{} }
func (m *SessionReply) String() string { return proto.CompactTextString(m) }
func (*SessionReply) ProtoMessage()    {}
func (*SessionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_request_response_f5edeaa3b812e241, []int{1}
}
func (m *SessionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionReply.Unmarshal(m, b)
}
func (m *SessionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionReply.Marshal(b, m, deterministic)
}
func (dst *SessionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionReply.Merge(dst, src)
}
func (m *SessionReply) XXX_Size() int {
	return xxx_messageInfo_SessionReply.Size(m)
}
func (m *SessionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionReply.DiscardUnknown(m)
}

var xxx_messageInfo_SessionReply proto.InternalMessageInfo

func (m *SessionReply) GetBestFriend() string {
	if m != nil {
		return m.BestFriend
	}
	return ""
}

func (m *SessionReply) GetCrush() []string {
	if m != nil {
		return m.Crush
	}
	return nil
}

func (m *SessionReply) GetMostSeen() string {
	if m != nil {
		return m.MostSeen
	}
	return ""
}

func (m *SessionReply) GetMutualLove() string {
	if m != nil {
		return m.MutualLove
	}
	return ""
}

func init() {
	proto.RegisterType((*SessionRequest)(nil), "types.SessionRequest")
	proto.RegisterType((*SessionReply)(nil), "types.SessionReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FriendsClient is the client API for Friends service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FriendsClient interface {
	KnowFriends(ctx context.Context, in *SessionRequest, opts ...grpc.CallOption) (*SessionReply, error)
}

type friendsClient struct {
	cc *grpc.ClientConn
}

func NewFriendsClient(cc *grpc.ClientConn) FriendsClient {
	return &friendsClient{cc}
}

func (c *friendsClient) KnowFriends(ctx context.Context, in *SessionRequest, opts ...grpc.CallOption) (*SessionReply, error) {
	out := new(SessionReply)
	err := c.cc.Invoke(ctx, "/types.Friends/KnowFriends", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FriendsServer is the server API for Friends service.
type FriendsServer interface {
	KnowFriends(context.Context, *SessionRequest) (*SessionReply, error)
}

func RegisterFriendsServer(s *grpc.Server, srv FriendsServer) {
	s.RegisterService(&_Friends_serviceDesc, srv)
}

func _Friends_KnowFriends_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendsServer).KnowFriends(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Friends/KnowFriends",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendsServer).KnowFriends(ctx, req.(*SessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Friends_serviceDesc = grpc.ServiceDesc{
	ServiceName: "types.Friends",
	HandlerType: (*FriendsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "KnowFriends",
			Handler:    _Friends_KnowFriends_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "types/request_response.proto",
}

func init() {
	proto.RegisterFile("types/request_response.proto", fileDescriptor_request_response_f5edeaa3b812e241)
}

var fileDescriptor_request_response_f5edeaa3b812e241 = []byte{
	// 272 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0xcd, 0x4a, 0xc3, 0x40,
	0x14, 0x85, 0x9d, 0xd6, 0xb4, 0x66, 0x14, 0x17, 0xa3, 0xc2, 0x50, 0x8a, 0x84, 0xac, 0xb2, 0x8a,
	0x18, 0x97, 0x6e, 0x4b, 0x41, 0x74, 0x35, 0x7d, 0x00, 0x49, 0xcd, 0x45, 0x03, 0xe9, 0x4c, 0x9c,
	0x7b, 0x47, 0xc9, 0xce, 0xa7, 0xf2, 0xf9, 0x24, 0x13, 0xf3, 0xa3, 0xcb, 0xef, 0x7c, 0xc9, 0xe1,
	0x70, 0x87, 0xaf, 0xa9, 0xa9, 0x01, 0x6f, 0x2c, 0xbc, 0x3b, 0x40, 0x7a, 0xb6, 0x80, 0xb5, 0xd1,
	0x08, 0x69, 0x6d, 0x0d, 0x19, 0x11, 0x78, 0x1b, 0x7f, 0x33, 0x7e, 0xbe, 0x03, 0xc4, 0xd2, 0x68,
	0xd5, 0x7d, 0x28, 0x24, 0x5f, 0x3a, 0x04, 0xfb, 0xb0, 0xb9, 0x95, 0x2c, 0x62, 0x49, 0xa8, 0x7a,
	0x1c, 0x4d, 0x26, 0x67, 0x53, 0x93, 0x89, 0x35, 0x0f, 0x91, 0x72, 0x4b, 0x9b, 0x9c, 0x40, 0xce,
	0x23, 0x96, 0xcc, 0xd5, 0x18, 0xb4, 0xff, 0x81, 0x2e, 0xbc, 0x3b, 0xf6, 0xae, 0x47, 0xb1, 0xe2,
	0x27, 0x55, 0x4e, 0x25, 0xb9, 0x02, 0x64, 0x10, 0xb1, 0x84, 0xa9, 0x81, 0xdb, 0xce, 0xca, 0xe8,
	0xd7, 0x4e, 0x2e, 0xbc, 0x1c, 0x83, 0xf8, 0x8b, 0xf1, 0xb3, 0x61, 0x78, 0x5d, 0x35, 0xe2, 0x9a,
	0xf3, 0x3d, 0x20, 0x6d, 0x6d, 0x09, 0xba, 0xf8, 0x5d, 0x3e, 0x49, 0xc4, 0x25, 0x0f, 0x5e, 0xac,
	0xc3, 0x37, 0x39, 0x8b, 0xe6, 0x49, 0xa8, 0x3a, 0x68, 0x07, 0x1c, 0x0c, 0xd2, 0x0e, 0x40, 0xfb,
	0xdd, 0xa1, 0x1a, 0xb8, 0x6d, 0x3c, 0x38, 0x72, 0x79, 0xf5, 0x64, 0x3e, 0xba, 0xe5, 0xa1, 0x9a,
	0x24, 0xd9, 0x96, 0x2f, 0xbb, 0x6e, 0x14, 0xf7, 0xfc, 0xf4, 0x51, 0x9b, 0xcf, 0x1e, 0xaf, 0x52,
	0x7f, 0xdd, 0xf4, 0xef, 0x65, 0x57, 0x17, 0xff, 0xe3, 0xba, 0x6a, 0xe2, 0xa3, 0xfd, 0xc2, 0xbf,
	0xc8, 0xdd, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfb, 0xae, 0x57, 0x74, 0xb1, 0x01, 0x00, 0x00,
}
