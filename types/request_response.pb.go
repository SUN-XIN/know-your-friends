// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types/request_response.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The reauest message
type UserFriendsRequest struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserFriendsRequest) Reset()         { *m = UserFriendsRequest{} }
func (m *UserFriendsRequest) String() string { return proto.CompactTextString(m) }
func (*UserFriendsRequest) ProtoMessage()    {}
func (*UserFriendsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_request_response_db35f5954d329d39, []int{0}
}
func (m *UserFriendsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserFriendsRequest.Unmarshal(m, b)
}
func (m *UserFriendsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserFriendsRequest.Marshal(b, m, deterministic)
}
func (dst *UserFriendsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserFriendsRequest.Merge(dst, src)
}
func (m *UserFriendsRequest) XXX_Size() int {
	return xxx_messageInfo_UserFriendsRequest.Size(m)
}
func (m *UserFriendsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserFriendsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserFriendsRequest proto.InternalMessageInfo

func (m *UserFriendsRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

// The response message
type UserFriendsReply struct {
	BestFriend           string   `protobuf:"bytes,1,opt,name=bestFriend,proto3" json:"bestFriend,omitempty"`
	MostSeen             string   `protobuf:"bytes,3,opt,name=mostSeen,proto3" json:"mostSeen,omitempty"`
	Crush                []string `protobuf:"bytes,5,rep,name=crush,proto3" json:"crush,omitempty"`
	MutualLove           string   `protobuf:"bytes,7,opt,name=mutualLove,proto3" json:"mutualLove,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserFriendsReply) Reset()         { *m = UserFriendsReply{} }
func (m *UserFriendsReply) String() string { return proto.CompactTextString(m) }
func (*UserFriendsReply) ProtoMessage()    {}
func (*UserFriendsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_request_response_db35f5954d329d39, []int{1}
}
func (m *UserFriendsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserFriendsReply.Unmarshal(m, b)
}
func (m *UserFriendsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserFriendsReply.Marshal(b, m, deterministic)
}
func (dst *UserFriendsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserFriendsReply.Merge(dst, src)
}
func (m *UserFriendsReply) XXX_Size() int {
	return xxx_messageInfo_UserFriendsReply.Size(m)
}
func (m *UserFriendsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UserFriendsReply.DiscardUnknown(m)
}

var xxx_messageInfo_UserFriendsReply proto.InternalMessageInfo

func (m *UserFriendsReply) GetBestFriend() string {
	if m != nil {
		return m.BestFriend
	}
	return ""
}

func (m *UserFriendsReply) GetMostSeen() string {
	if m != nil {
		return m.MostSeen
	}
	return ""
}

func (m *UserFriendsReply) GetCrush() []string {
	if m != nil {
		return m.Crush
	}
	return nil
}

func (m *UserFriendsReply) GetMutualLove() string {
	if m != nil {
		return m.MutualLove
	}
	return ""
}

func init() {
	proto.RegisterType((*UserFriendsRequest)(nil), "types.UserFriendsRequest")
	proto.RegisterType((*UserFriendsReply)(nil), "types.UserFriendsReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FriendsClient is the client API for Friends service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FriendsClient interface {
	KnowFriends(ctx context.Context, in *UserFriendsRequest, opts ...grpc.CallOption) (*UserFriendsReply, error)
}

type friendsClient struct {
	cc *grpc.ClientConn
}

func NewFriendsClient(cc *grpc.ClientConn) FriendsClient {
	return &friendsClient{cc}
}

func (c *friendsClient) KnowFriends(ctx context.Context, in *UserFriendsRequest, opts ...grpc.CallOption) (*UserFriendsReply, error) {
	out := new(UserFriendsReply)
	err := c.cc.Invoke(ctx, "/types.Friends/KnowFriends", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FriendsServer is the server API for Friends service.
type FriendsServer interface {
	KnowFriends(context.Context, *UserFriendsRequest) (*UserFriendsReply, error)
}

func RegisterFriendsServer(s *grpc.Server, srv FriendsServer) {
	s.RegisterService(&_Friends_serviceDesc, srv)
}

func _Friends_KnowFriends_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFriendsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendsServer).KnowFriends(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Friends/KnowFriends",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendsServer).KnowFriends(ctx, req.(*UserFriendsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Friends_serviceDesc = grpc.ServiceDesc{
	ServiceName: "types.Friends",
	HandlerType: (*FriendsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "KnowFriends",
			Handler:    _Friends_KnowFriends_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "types/request_response.proto",
}

func init() {
	proto.RegisterFile("types/request_response.proto", fileDescriptor_request_response_db35f5954d329d39)
}

var fileDescriptor_request_response_db35f5954d329d39 = []byte{
	// 210 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x29, 0xa9, 0x2c, 0x48,
	0x2d, 0xd6, 0x2f, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x89, 0x2f, 0x4a, 0x2d, 0x2e, 0xc8, 0xcf,
	0x2b, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0xcb, 0x2a, 0xe9, 0x70, 0x09,
	0x85, 0x16, 0xa7, 0x16, 0xb9, 0x15, 0x65, 0xa6, 0xe6, 0xa5, 0x14, 0x07, 0x41, 0xd4, 0x0a, 0x89,
	0x71, 0xb1, 0x95, 0x16, 0xa7, 0x16, 0x79, 0xba, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x41,
	0x79, 0x4a, 0x2d, 0x8c, 0x5c, 0x02, 0x28, 0xca, 0x0b, 0x72, 0x2a, 0x85, 0xe4, 0xb8, 0xb8, 0x92,
	0x52, 0x8b, 0x4b, 0x20, 0x62, 0x50, 0x0d, 0x48, 0x22, 0x42, 0x52, 0x5c, 0x1c, 0xb9, 0xf9, 0xc5,
	0x25, 0xc1, 0xa9, 0xa9, 0x79, 0x12, 0xcc, 0x60, 0x59, 0x38, 0x5f, 0x48, 0x84, 0x8b, 0x35, 0xb9,
	0xa8, 0xb4, 0x38, 0x43, 0x82, 0x55, 0x81, 0x59, 0x83, 0x33, 0x08, 0xc2, 0x01, 0x99, 0x98, 0x5b,
	0x5a, 0x52, 0x9a, 0x98, 0xe3, 0x93, 0x5f, 0x96, 0x2a, 0xc1, 0x0e, 0x31, 0x11, 0x21, 0x62, 0xe4,
	0xc7, 0xc5, 0x0e, 0x75, 0x81, 0x90, 0x33, 0x17, 0xb7, 0x77, 0x5e, 0x7e, 0x39, 0x8c, 0x2b, 0xa9,
	0x07, 0xf6, 0x96, 0x1e, 0xa6, 0x9f, 0xa4, 0xc4, 0xb1, 0x49, 0x15, 0xe4, 0x54, 0x2a, 0x31, 0x24,
	0xb1, 0x81, 0x83, 0xc4, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xac, 0x8b, 0x6b, 0xaf, 0x32, 0x01,
	0x00, 0x00,
}
